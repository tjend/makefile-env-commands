# define commands by prefixing the name with 'COMMAND_'
COMMAND_hello_world=echo "hello world" # echo hello world

# quoting the command is an option
# use \' within the command to escape an actual quote
COMMAND_quoted_command=echo "this command is 'quoted' in .env using single quotes - \"double quotes\" within a bash string (that is surrounded by unescaped double quotes) need to be escaped as '\\\"'" # quoted command

# multi-line commands are an option
# use a trailing \ to continue onto the next line
# comments with '#' don't work, so use '${COMMENT# this is a comment} \' instead
COMMAND_multiline_command0=${COMMENT# comment for multiline comand} \
STATUS=0; \
if [ $${STATUS} -eq 0 ]; then \
  echo 'multiline command output when status=0'; \
else \
  echo 'multiline command output when status!=0'; \
fi
COMMAND_multiline_command1=${COMMENT# comment for multiline comand} \
STATUS=1; \
if [ $${STATUS} -eq 0 ]; then \
  echo 'multiline command output when status=0'; \
else \
  echo 'multiline command output when status!=0'; \
fi

# run all tests
#COMMAND_test=cd test && make test # run all tests
